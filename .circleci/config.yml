# circleci config
# version
version: 2.1
# orbs
orbs:
  node: circleci/node@5.1.0
  docker: circleci/docker@2.4.0
jobs:
  test:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: yarn test
          name: Run tests
      - run:
          command: yarn build
          name: Build app
      - run: 
          command: yarn docker-dev-up -d
          name: Build docker composer      
      - persist_to_workspace:
          root: ~/backend-manage
          paths:
            - .     
  build-and-push:
    environment:
      DOCKER_IMAGE: leduytien0801/backend-manage
      DOCKER_TAG: latest
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check:
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASSWORD
      - docker/build:
          extra_build_args: 
            '--build-arg NODE_ENV=dev
             --build-arg APP_PORT=$APP_PORT
             --build-arg DB_CONNECTION=$DB_CONNECTION
             --build-arg DB_PORT=$DB_PORT
             --build-arg DB_USER=$DB_USER
             --build-arg DB_PASSWORD=$DB_PASSWORD
             --build-arg DB_ROOT_PASSWORD=$DB_ROOT_PASSWORD
             --build-arg DB_DATABASE=$DB_DATABASE
             --build-arg TIMEZONE_NUM=$TIMEZONE_NUM
             --build-arg CLOUD_NAME=$CLOUD_NAME
             --build-arg API_KEY=$API_KEY
             --build-arg API_SECRET=$API_KEY'
          image: $DOCKER_IMAGE
          tag: $DOCKER_TAG
      - docker/push:
          digest-path: /tmp/digest.txt
          image: $DOCKER_IMAGE
          tag: $DOCKER_TAG
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"
  deploy:
    executor: docker/docker
    steps:
      # Please add $SSH_KEY_FINGERPRINT, $DEPLOYED_USER@ and DEPLOYED_SERVER to project's environment
      - add_ssh_keys:
          fingerprints:
            - $SSH_KEY_FINGERPRINT
      - run: ssh -oStrictHostKeyChecking=no $DEPLOYED_USER@$DEPLOYED_SERVER './deploy.sh'
# test node pending
workflows:
  backend-manage-pipeline:
    jobs:
      - test
      - build-and-push:
          requires:
            - test
          filters:
            branches:
              only:
                - deployment-circleci